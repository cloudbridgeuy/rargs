{%- set required = [] -%}
{%- set opts = false %}
{%- set fls = false %}
{%- set args = false %}
{%- set _any = false %}
{%- if options %}
  {%- if command["options"] %}
    {%- set opts = options | merge(with=command["options"]) %}
  {%- else %}
    {%- set opts = options %}
  {%- endif %}
{%- else %}
  {%- if command["options"] %}
    {%- set opts = command["options"] %}
  {%- endif %}
{%- endif %}
{%- if flags %}
  {%- if command["flags"] %}
    {%- set fls = flags | merge(with=command["flags"]) %}
  {%- else %}
    {%- set fls = flags %}
  {%- endif %}
{%- else %}
  {%- if command["flags"] %}
    {%- set fls = command["flags"] %}
  {%- endif %}
{%- endif %}
{%- if positional_arguments %}
  {%- if command["positional_arguments"] %}
    {%- set args = command["positional_arguments"] %}
  {%- else %}
    {%- set args = positional_arguments %}
  {%- endif %}
{%- else %}
  {%- if command["positional_arguments"] %}
    {%- set args = command["positional_arguments"] %}
  {%- endif %}
{%- endif %}
{%- if any %}
  {%- if command["any"] %}
    {%- set _any = command["any"] %}
  {%- else %}
    {%- set _any = any %}
  {%- endif %}
{%- elif command["any"] %}
  {%- set _any = command["any"] %}
{%- endif %}

{%- if opts -%}
  {%- for key, option in opts -%}
    {%- if option["short"] and option["short"] == "h" %}
      {%- set_global uses_h = true %}
    {%- endif %}
    {%- if option["short"] and option["short"] == "v" %}
      {%- set_global uses_v = true %}
    {%- endif %}
    {%- if option["required"] -%}
      {%- set_global required = required | concat(with=option) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}
{%- if fls -%}
  {%- for key, flag in fls -%}
    {%- if flag["short"] and flag["short"] == "h" %}
      {%- set_global uses_h = true %}
      {%- break -%}
    {%- endif %}
  {%- endfor -%}
{%- endif %}
  while [[ $# -gt 0 ]]; do
    key="$1"
    case "$key" in
    {%- if fls %}{%- for key, flag in fls %}
      {% if flag["short"] -%}-{{ flag["short"] }} | {% endif -%}--{{ key }})
        {% if flag["multiple"] -%}
        if [[ -z "$rargs_{{ key | replace(from="-", to="_") }}" ]]; then
          rargs_{{ key | replace(from="-", to="_") }}=1
        else
          rargs_{{ key | replace(from="-", to="_") }}=$(("$rargs_{{ key | replace(from="-", to="_") }}" + 1))
        fi
        {% else -%}
        rargs_{{ key | replace(from="-", to="_") }}=1
        {% endif -%}
        shift
        ;;
      {%- if flag["default"] %}
      {% if flag["short"] -%}-no-{{ flag["short"] }} | {% endif -%}--no-{{ key }})
        rargs_{{ key | replace(from="-", to="_") }}=""
        shift
        ;;
      {%- endif %}
    {%- endfor -%}
{%- endif %}
    {%- if opts -%}
{%- for key, option in opts %}
      {% if option["short"] -%}-{{ option["short"] }} | {% endif -%}--{{ key }})
        {% if option["multiple"] -%}
        rargs_{{ key | replace(from="-", to="_") }}+=("$2")
        {% else -%}
        rargs_{{ key | replace(from="-", to="_") }}="$2"
        {% endif -%}
        shift 2
        ;;
    {%- endfor -%}
{%- endif %}
    {%- if rules and rules is containing("no-first-option-help") %}
      {% if not uses_h %}-h|{% endif %}--help)
        rargs_help=1
        shift 1
        ;;
    {%- endif %}
    {%- if not command["subcommand"] %}
      {%- if _any %}
      --)
        shift
        rargs_other_args+=("$@")
        break
        ;;
      -?*)
        rargs_other_args+=("$1")
        shift
        ;;
      {%- else %}
      -?*)
        printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid option: " "$key" >&2
        exit 1
        ;;
      {%- endif %}
    {%- elif _any %}
      --)
        shift
        rargs_other_args+=("$@")
        break
        ;;
      -?*)
        rargs_other_args+=("$1")
        shift
        ;;
    {%- endif %}
      *)
        {%- if args %}
          {%- for arg in args %}
            {%- if loop.first and loop.last %}
        if [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
              {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
              {%- endif %}
          shift
        else
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
          shift
              {%- else %}
                {%- if _any %}
          rargs_other_args+=("$1")
          shift
                {%- else %}
          printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid argument: " "$key" >&2
          exit 1
                {%- endif %}
              {%- endif %}
        fi
            {%- elif loop.first %}
        if [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
              {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
              {%- endif %}
          shift
            {%- elif loop.last %}
        elif [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
              {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
              {%- endif %}
          shift
        else
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
          shift
              {%- else %}
                {%- if _any %}
          rargs_other_args+=("$1")
          shift
                {%- else %}
          printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid argument: " "$key" >&2
          exit 1
                {%- endif %}
              {%- endif %}
        fi
            {%- else %}
        elif [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
              {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
              {%- endif %}
          shift
            {%- endif %}
          {%- endfor %}
      {%- else %}
        {%- if not command["subcommand"] %}
          {%- if _any %}
        rargs_other_args+=("$1")
        shift
          {%- else %}
        if [[ "$key" == "" ]]; then
          break
        fi
        printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid argument: " "$key" >&2
        exit 1
          {%- endif %}
        {%- else %}
          {%- if _any %}
        rargs_other_args+=("$1")
        shift
          {%- else %}
        break
          {%- endif %}
        {%- endif %}
      {%- endif %}
        ;;
    esac
  done
