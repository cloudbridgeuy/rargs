{%- set_global required = [] -%}
{%- set_global uses_h = false %}
{%- set_global uses_v = false %}
{%- if options -%}
  {%- for key, option in options -%}
    {%- if option["short"] and option["short"] == "h" %}
      {%- set_global uses_h = true %}
    {%- endif %}
    {%- if option["short"] and option["short"] == "v" %}
      {%- set_global uses_v = true %}
    {%- endif %}
    {%- if option["required"] -%}
      {%- set_global required = required | concat(with=option) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}
{%- if flags -%}
  {%- for key, flag in flags -%}
    {%- if flag["short"] and flag["short"] == "h" %}
      {%- set_global uses_h = true %}
    {%- endif %}
    {%- if flag["short"] and flag["short"] == "v" %}
      {%- set_global uses_v = true %}
    {%- endif %}
  {%- endfor -%}
{%- endif -%}


parse_arguments() {
  while [[ $# -gt 0 ]]; do
    case "${1:-}" in
{%- if version %}
      {% if not uses_v %}-v|{% endif %}--version)
        version
        exit
        ;;
{%- endif %}
{%- if rules is not defined or rules is not containing("no-first-option-help") and rules is not containing("custom-usage") %}
      {%if not uses_h %}-h|{% endif %}--help)
        usage
        exit
        ;;
{%- endif %}
      *)
        break
        ;;
    esac
  done

{%- if commands or root and root | length > 0 %}
  action="${1:-}"

  case $action in
  {%- if commands %}
    {%- for key, command in commands %}
    {% if command["aliases"] %}{{ command["aliases"] | join(sep="|") }}|{% endif %}{{ key }})
      action="{{ key }}"
      rargs_input=("${rargs_input[@]:1}")
      ;;
    {%- endfor %}
  {%- endif %}
    {% if not uses_h %}-h|{% endif %}--help)
      usage
      exit
      ;;
    "")
  {%- if default and default != "" %}
    {%- if not rules or rules is not containing("no-force-default") %}
      action="{{ default }}"
    {%- endif %}
  {%- elif root %}
      action="root"
  {%- elif required | length > 0 %}
      usage >&2
      exit 1
  {% endif %}
      ;;
    *)
  {%- if default and default != "" %}
      action="{{ default }}"
  {%- elif root %}
      action="root"
  {%- else %}
      printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid command: " "$action" >&2
      exit 1
  {%- endif %}
      ;;
  esac
{%- else %}
  while [[ $# -gt 0 ]]; do
    key="$1"
    case "$key" in
  {%- if flags %}
    {%- for key, flag in flags %}
      {% if flag["short"] -%}-{{ flag["short"] }} | {% endif -%}--{{ key }})
        {% if flag["multiple"] -%}
        if [[ -z "$rargs_{{ key | replace(from="-", to="_") }}" ]]; then
          rargs_{{ key | replace(from="-", to="_") }}=1
        else
          rargs_{{ key | replace(from="-", to="_") }}=$(("$rargs_{{ key | replace(from="-", to="_") }}" + 1))
        fi
        {% else -%}
        rargs_{{ key | replace(from="-", to="_") }}=1
        {% endif -%}
        shift
        ;;
    {%- endfor -%}
  {%- endif %}
  {%- if options %}
    {%- for key, option in options %}
      {% if option["short"] -%}-{{ option["short"] }} | {% endif -%}--{{ key }})
        {% if option["multiple"] -%}
        rargs_{{ key | replace(from="-", to="_") }}+=("$2")
        {% else -%}
        rargs_{{ key | replace(from="-", to="_") }}="$2"
        {% endif -%}
        shift 2
    {%- endfor -%}
  {% endif %}
  {%- if rules and rules is containing("no-first-option-help") %}
      {% if not uses_h %}-h|{% endif %}--help)
        rargs_help=1
        shift 1
        ;;
  {% endif %}
      -?*)
        printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid option: " "$key" >&2
        exit 1
        ;;
      *)
  {%- if positional_arguments %}
    {%- for arg in positional_arguments %}
      {%- if loop.first and loop.last %}
        if [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
              {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
              {%- endif %}
          shift
        else
        {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
          shift
        {%- else %}
          {%- if _any %}
          rargs_other_args+=("$1")
          shift
          {%- else %}
          printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid argument: " "$key" >&2
          exit 1
          {%- endif %}
        {%- endif %}
        fi
      {%- elif loop.first %}
        if [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
              {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
              {%- endif %}
          shift
      {%- elif loop.last %}
        elif [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
              {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
              {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
              {%- endif %}
          shift
        else
        {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
          shift
        {%- else %}
          {%- if _any %}
          rargs_other_args+=("$1")
          shift
          {%- else %}
          printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid argument: " "$key" >&2
          exit 1
          {%- endif %}
        {%- endif %}
        fi
      {%- else %}
        elif [[ -z "$rargs_{{ arg["name"] | replace(from="-", to="_") }}" ]]; then
        {%- if arg["multiple"] %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}+=("$key")
        {%- else %}
          rargs_{{ arg["name"] | replace(from="-", to="_") }}=$key
        {%- endif %}
          shift
      {%- endif %}
    {%- endfor %}
  {%- else %}
    {%- if _any %}
        rargs_other_args+=("$1")
        shift
    {%- else %}
        if [[ "$key" == "" ]]; then
          break
        fi
        printf "\e[31m%s\e[33m%s\e[31m\e[0m\n\n" "Invalid argument: " "$key" >&2
        exit 1
    {%- endif %}
  {%- endif %}
        ;;
    esac
  done
{%- endif %}
}
